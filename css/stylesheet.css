/* Code for use of grid for realizing our layout are inspired from section
   "A responsive layout with 1 to 3 fluid columns using grid-template-areas" in:
   https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_grid_layout/Realizing_common_layouts_using_grids */

* {
    /* Padding or border-width is not added on top of the element
       width. Default is "content-box" */
   box-sizing: border-box;
}

body {
    background-color: #707070;
}

ul {
    list-style-type:none;
}

a {
    font-family: Verdana, Geneva, Tahoma, sans-serif;
    color: #ff4e00;
    text-decoration: none;
}

a:hover {
    color: #d20d0d;
    text-decoration: underline;
}

nav {
    border-style: solid;
    border-color: #000000;
    border-width: 5px ;
    background-color: #333333;
    text-align:center
}

nav a {
    color: #01cd74;
    font-size: 20px;
}

nav a:hover {
    text-decoration: none;
}


.image {
    max-width: 100%;
    height: auto;
}

/* Grid container used as a container for all semantic elements: head, main
   aside, footer, etc. */
.main-layout {
    display: grid;
    width: 100vw;
    height: 100vh;
    background-color: #707070;
    grid-template-columns: auto 1250px auto;
    grid-template-rows: min-content min-content auto;
    grid-template-areas:
            "side_left header side_right"
            "side_left main side_right"
            "side_left footer side_right";
    gap: 10px;
}

/* All direct elements of a grid-container becomes grid-items */
.main-header {
    grid-area: header;
    background-color: #ffffff;
}

.main-container {
    grid-area: main;
    background-color: #ffffff;
    padding: 20px;
}

.side_left {
    grid-area: side_left;
}

.side_right {
    grid-area: side_right;
}

.main-footer {
    grid-area: footer;
    background-color: #ffffff;
}

/* Flexbox usd for navigation layout. Notation <element1> > <element2>
   means <element2> within <element1>*/
.navigation-links {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: space-evenly;
}

/* Flexbox used for contact information  layout */
.contact-info {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: space-evenly;
    align-content: center;
}

.contact-info > li {
    padding: 10px;


}

/* Media query. Page content(header, main, footer) will use 100% of screen
   width on any screen or device <= 1250px */
@media (max-width: 1250px) {
    .main-layout {
        grid-template-columns: 100%;
        grid-template-areas:
                "header"
                "main"
                "footer";
        /*justify-content: center;*/
    }
}

@media (max-width: 650px) {
    .contact-info {
        flex-direction: column;
    }
}

h1 {
    font-size: 40px;
}

h2 {
    font-size: 20px;
  }